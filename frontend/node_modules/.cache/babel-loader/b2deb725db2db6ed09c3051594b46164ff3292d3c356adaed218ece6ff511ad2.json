{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/Workspace/ChatPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { PaperAirplaneIcon, PhotoIcon, VideoCameraIcon } from '@heroicons/react/24/outline';\nimport api from '../../utils/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPanel = ({\n  currentConversation,\n  selectedModel,\n  taskType,\n  onOutputUpdate,\n  setConversations\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [messagesLoading, setMessagesLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    if (currentConversation) {\n      loadMessages();\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadMessages = async () => {\n    if (!currentConversation) return;\n    try {\n      setMessagesLoading(true);\n      const response = await api.get(`/conversations/${currentConversation.id}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    } finally {\n      setMessagesLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputValue.trim() || !currentConversation || loading) return;\n    const messageText = inputValue.trim();\n    setInputValue('');\n    setLoading(true);\n    try {\n      // Add user message to UI immediately\n      const userMessage = {\n        id: Date.now().toString(),\n        content: messageText,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Send to API\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          content: messageText,\n          conversation_id: currentConversation.id,\n          model: selectedModel,\n          task_type: taskType\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      const reader = response.body.getReader();\n      let assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: '',\n        role: 'assistant',\n        model_used: selectedModel,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = new TextDecoder().decode(value);\n        const lines = chunk.split('\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(6));\n              if (data.content) {\n                assistantMessage.content += data.content;\n                setMessages(prev => {\n                  const newMessages = [...prev];\n                  newMessages[newMessages.length - 1] = {\n                    ...assistantMessage\n                  };\n                  return newMessages;\n                });\n\n                // Update output panel with content\n                onOutputUpdate(assistantMessage.content, getOutputType(assistantMessage.content, taskType));\n              }\n              if (data.done) {\n                // Update conversation timestamp\n                setConversations(prev => prev.map(conv => conv.id === currentConversation.id ? {\n                  ...conv,\n                  updated_at: new Date().toISOString()\n                } : conv));\n              }\n            } catch (error) {\n              console.error('Error parsing SSE data:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, {\n        id: Date.now().toString(),\n        content: 'Sorry, there was an error processing your message. Please try again.',\n        role: 'assistant',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getOutputType = (content, taskType) => {\n    if (taskType === 'code' || content.includes('```')) {\n      return 'code';\n    }\n    if (taskType === 'image') {\n      return 'image';\n    }\n    if (taskType === 'video') {\n      return 'video';\n    }\n    return 'text';\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  const handleImageGenerate = async () => {\n    if (!currentConversation) return;\n    const prompt = inputValue.trim() || 'Generate a creative image';\n    setInputValue('');\n    setLoading(true);\n    try {\n      // Add user message\n      const userMessage = {\n        id: Date.now().toString(),\n        content: `ðŸŽ¨ Image generation request: ${prompt}`,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // For now, show placeholder response\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: `I understand you want to generate an image with the prompt: \"${prompt}\". Image generation will be available once the API keys are configured. For now, this is a placeholder response.`,\n        role: 'assistant',\n        model_used: 'image-generator',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      onOutputUpdate(prompt, 'image');\n    } catch (error) {\n      console.error('Error generating image:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVideoGenerate = async () => {\n    if (!currentConversation) return;\n    const prompt = inputValue.trim() || 'Generate a creative video';\n    setInputValue('');\n    setLoading(true);\n    try {\n      // Add user message\n      const userMessage = {\n        id: Date.now().toString(),\n        content: `ðŸŽ¬ Video generation request: ${prompt}`,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // For now, show placeholder response\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: `I understand you want to generate a video with the prompt: \"${prompt}\". Video generation will be available once the API keys are configured. For now, this is a placeholder response.`,\n        role: 'assistant',\n        model_used: 'video-generator',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      onOutputUpdate(prompt, 'video');\n    } catch (error) {\n      console.error('Error generating video:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!currentConversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-8 h-8 text-primary-600\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"Start a New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: \"Select \\\"New Chat\\\" from the sidebar to begin chatting with Claudie AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messagesLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center py-8\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          size: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textareaRef,\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: `Type your message for ${taskType === 'general' ? 'general chat' : taskType}...`,\n            className: \"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\",\n            rows: 3,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !inputValue.trim(),\n            className: \"absolute bottom-3 right-3 p-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n            children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), (taskType === 'image' || taskType === 'video') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [taskType === 'image' && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleImageGenerate,\n            disabled: loading,\n            className: \"flex items-center px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(PhotoIcon, {\n              className: \"w-4 h-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), \"Generate Image\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), taskType === 'video' && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVideoGenerate,\n            disabled: loading,\n            className: \"flex items-center px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(VideoCameraIcon, {\n              className: \"w-4 h-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), \"Generate Video\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPanel, \"tbgSZClPzLacNaUGnH1uEyDLVAE=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PaperAirplaneIcon","PhotoIcon","VideoCameraIcon","api","LoadingSpinner","MessageBubble","jsxDEV","_jsxDEV","ChatPanel","currentConversation","selectedModel","taskType","onOutputUpdate","setConversations","_s","messages","setMessages","inputValue","setInputValue","loading","setLoading","messagesLoading","setMessagesLoading","messagesEndRef","textareaRef","loadMessages","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","id","data","error","console","handleSubmit","e","preventDefault","trim","messageText","userMessage","Date","now","toString","content","role","timestamp","toISOString","prev","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","localStorage","getItem","body","JSON","stringify","conversation_id","model","task_type","ok","Error","reader","getReader","assistantMessage","model_used","done","value","read","chunk","TextDecoder","decode","lines","split","line","startsWith","parse","slice","newMessages","length","getOutputType","map","conv","updated_at","includes","handleKeyDown","key","shiftKey","handleImageGenerate","prompt","handleVideoGenerate","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","size","message","ref","onSubmit","onChange","target","onKeyDown","placeholder","rows","disabled","type","onClick","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/Workspace/ChatPanel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { PaperAirplaneIcon, PhotoIcon, VideoCameraIcon } from '@heroicons/react/24/outline';\nimport api from '../../utils/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport MessageBubble from './MessageBubble';\n\nconst ChatPanel = ({ \n  currentConversation, \n  selectedModel, \n  taskType, \n  onOutputUpdate,\n  setConversations \n}) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [messagesLoading, setMessagesLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    if (currentConversation) {\n      loadMessages();\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const loadMessages = async () => {\n    if (!currentConversation) return;\n    \n    try {\n      setMessagesLoading(true);\n      const response = await api.get(`/conversations/${currentConversation.id}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    } finally {\n      setMessagesLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputValue.trim() || !currentConversation || loading) return;\n\n    const messageText = inputValue.trim();\n    setInputValue('');\n    setLoading(true);\n\n    try {\n      // Add user message to UI immediately\n      const userMessage = {\n        id: Date.now().toString(),\n        content: messageText,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Send to API\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          content: messageText,\n          conversation_id: currentConversation.id,\n          model: selectedModel,\n          task_type: taskType\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      const reader = response.body.getReader();\n      let assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: '',\n        role: 'assistant',\n        model_used: selectedModel,\n        timestamp: new Date().toISOString()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = new TextDecoder().decode(value);\n        const lines = chunk.split('\\n');\n\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(6));\n              if (data.content) {\n                assistantMessage.content += data.content;\n                setMessages(prev => {\n                  const newMessages = [...prev];\n                  newMessages[newMessages.length - 1] = { ...assistantMessage };\n                  return newMessages;\n                });\n\n                // Update output panel with content\n                onOutputUpdate(assistantMessage.content, getOutputType(assistantMessage.content, taskType));\n              }\n              \n              if (data.done) {\n                // Update conversation timestamp\n                setConversations(prev => \n                  prev.map(conv => \n                    conv.id === currentConversation.id \n                      ? { ...conv, updated_at: new Date().toISOString() }\n                      : conv\n                  )\n                );\n              }\n            } catch (error) {\n              console.error('Error parsing SSE data:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, {\n        id: Date.now().toString(),\n        content: 'Sorry, there was an error processing your message. Please try again.',\n        role: 'assistant',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getOutputType = (content, taskType) => {\n    if (taskType === 'code' || content.includes('```')) {\n      return 'code';\n    }\n    if (taskType === 'image') {\n      return 'image';\n    }\n    if (taskType === 'video') {\n      return 'video';\n    }\n    return 'text';\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  const handleImageGenerate = async () => {\n    if (!currentConversation) return;\n    \n    const prompt = inputValue.trim() || 'Generate a creative image';\n    setInputValue('');\n    setLoading(true);\n\n    try {\n      // Add user message\n      const userMessage = {\n        id: Date.now().toString(),\n        content: `ðŸŽ¨ Image generation request: ${prompt}`,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // For now, show placeholder response\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: `I understand you want to generate an image with the prompt: \"${prompt}\". Image generation will be available once the API keys are configured. For now, this is a placeholder response.`,\n        role: 'assistant',\n        model_used: 'image-generator',\n        timestamp: new Date().toISOString()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n      onOutputUpdate(prompt, 'image');\n    } catch (error) {\n      console.error('Error generating image:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVideoGenerate = async () => {\n    if (!currentConversation) return;\n    \n    const prompt = inputValue.trim() || 'Generate a creative video';\n    setInputValue('');\n    setLoading(true);\n\n    try {\n      // Add user message\n      const userMessage = {\n        id: Date.now().toString(),\n        content: `ðŸŽ¬ Video generation request: ${prompt}`,\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // For now, show placeholder response\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        content: `I understand you want to generate a video with the prompt: \"${prompt}\". Video generation will be available once the API keys are configured. For now, this is a placeholder response.`,\n        role: 'assistant',\n        model_used: 'video-generator',\n        timestamp: new Date().toISOString()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n      onOutputUpdate(prompt, 'video');\n    } catch (error) {\n      console.error('Error generating video:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!currentConversation) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center p-8\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg className=\"w-8 h-8 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Start a New Conversation</h3>\n          <p className=\"text-gray-500 text-sm\">\n            Select \"New Chat\" from the sidebar to begin chatting with Claudie AI\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messagesLoading ? (\n          <div className=\"flex items-center justify-center py-8\">\n            <LoadingSpinner size=\"md\" />\n          </div>\n        ) : messages.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            <p className=\"text-sm\">No messages yet. Start the conversation!</p>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <MessageBubble key={message.id} message={message} />\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <form onSubmit={handleSubmit} className=\"space-y-3\">\n          <div className=\"relative\">\n            <textarea\n              ref={textareaRef}\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder={`Type your message for ${taskType === 'general' ? 'general chat' : taskType}...`}\n              className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n              rows={3}\n              disabled={loading}\n            />\n            <button\n              type=\"submit\"\n              disabled={loading || !inputValue.trim()}\n              className=\"absolute bottom-3 right-3 p-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {loading ? (\n                <LoadingSpinner size=\"sm\" />\n              ) : (\n                <PaperAirplaneIcon className=\"w-4 h-4\" />\n              )}\n            </button>\n          </div>\n\n          {/* Action Buttons */}\n          {(taskType === 'image' || taskType === 'video') && (\n            <div className=\"flex space-x-2\">\n              {taskType === 'image' && (\n                <button\n                  type=\"button\"\n                  onClick={handleImageGenerate}\n                  disabled={loading}\n                  className=\"flex items-center px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 text-sm\"\n                >\n                  <PhotoIcon className=\"w-4 h-4 mr-2\" />\n                  Generate Image\n                </button>\n              )}\n              {taskType === 'video' && (\n                <button\n                  type=\"button\"\n                  onClick={handleVideoGenerate}\n                  disabled={loading}\n                  className=\"flex items-center px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 text-sm\"\n                >\n                  <VideoCameraIcon className=\"w-4 h-4 mr-2\" />\n                  Generate Video\n                </button>\n              )}\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}